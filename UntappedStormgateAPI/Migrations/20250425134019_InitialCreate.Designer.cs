// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UntappedAPI.DatabaseContext;

#nullable disable

namespace UntappedAPI.Migrations
{
    [DbContext(typeof(UntappedDbContext))]
    [Migration("20250425134019_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UntappedAPI.Models.PlayerSnapshot", b =>
                {
                    b.Property<string>("ProfileId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("InfoRichness")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastSnapshot")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("MatchHistoryVisibility")
                        .HasColumnType("bit");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ReplayVisibility")
                        .HasColumnType("bit");

                    b.HasKey("ProfileId");

                    b.ToTable("PlayerSnapshot");
                });
#pragma warning restore 612, 618
        }
    }
}
